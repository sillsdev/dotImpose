name: Build and Publish NuGet Package

on:
    push:
        branches: [main, master]
        tags: ["v*"]
    pull_request:
        branches: [main, master]
    workflow_dispatch:

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v4

            - name: Setup .NET
              uses: actions/setup-dotnet@v4
              with:
                  dotnet-version: 8.0.x

            - name: Determine version with run ID
              id: version
              shell: bash
              run: |
                  # Extract version from Directory.Build.props
                  BASE_VERSION=$(grep -o '<Version>.*</Version>' Directory.Build.props | sed 's/<Version>\(.*\)<\/Version>/\1/')

                  # Create version with run ID
                  FULL_VERSION="${BASE_VERSION}.${{ github.run_id }}"
                  echo "base_version=$BASE_VERSION" >> $GITHUB_OUTPUT
                  echo "full_version=$FULL_VERSION" >> $GITHUB_OUTPUT
                  echo "Base version: $BASE_VERSION"
                  echo "Full version: $FULL_VERSION"

            - name: Restore dependencies
              run: dotnet restore src/dotImpose.csproj

            - name: Build
              run: dotnet build src/dotImpose.csproj --no-restore --configuration Release -p:Version=${{ steps.version.outputs.full_version }}

            - name: Test
              run: dotnet test --no-build --configuration Release --verbosity normal

            - name: Pack
              run: dotnet pack src/dotImpose.csproj --no-build --configuration Release --output nupkg/ -p:Version=${{ steps.version.outputs.full_version }}

            - name: List generated packages
              run: ls -la nupkg/

            - name: Upload NuGet package artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: nuget-packages-${{ steps.version.outputs.full_version }}
                  path: nupkg/*.nupkg

    publish:
        needs: build
        runs-on: ubuntu-latest
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/v'))

        steps:
            - uses: actions/checkout@v4

            - name: Determine version with run ID
              id: version
              shell: bash
              run: |
                  # Extract version from Directory.Build.props
                  BASE_VERSION=$(grep -o '<Version>.*</Version>' Directory.Build.props | sed 's/<Version>\(.*\)<\/Version>/\1/')

                  # Create version with run ID
                  FULL_VERSION="${BASE_VERSION}.${{ github.run_id }}"
                  echo "base_version=$BASE_VERSION" >> $GITHUB_OUTPUT
                  echo "full_version=$FULL_VERSION" >> $GITHUB_OUTPUT
                  echo "Base version: $BASE_VERSION"
                  echo "Full version: $FULL_VERSION"

            - name: Download artifacts
              uses: actions/download-artifact@v4
              with:
                  name: nuget-packages-${{ steps.version.outputs.full_version }}
                  path: nupkg/

            - name: Setup .NET
              uses: actions/setup-dotnet@v4
              with:
                  dotnet-version: 8.0.x

            - name: Publish to NuGet
              run: |
                  for file in nupkg/*.nupkg; do
                    echo "Publishing $file"
                    dotnet nuget push "$file" --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
                  done
